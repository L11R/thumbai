# -----------------------------------------------------------------------------
# thumbai - Application Routes Configuration
#
# Refer documentation to explore and configure routes.
# Doc: https://docs.aahframework.org/routing.html
# -----------------------------------------------------------------------------

domains {
  #------------------------------------------------------------------------------
  # Domain/subdomain Key Name
  # Choose a `unique keyname` to define domain section and its configuration.
  # Tip: domain name address, port no values could be used to create a 
  # meaningful domain key, etc.
  #
  # Doc: https://docs.aahframework.org/routes-config.html#domain-configuration
  #------------------------------------------------------------------------------
  thumbai {
    name = "thumbai routes"
    host = "localhost"
    anti_csrf_check = false
    catch_all {
      controller = "VanityController"
      action = "Handle"
      auth = "anonymous"
    }
      

    #------------------------------------------------------------------------------
    # Static files Routes Configuration
    # To serve static files, it can be directory or individual file.
    # This section optional one, for e.g: RESTful APIs doesn't need this section.
    # Static files are delivered via `http.ServeContent`.
    #
    # Supported features:
    #   - Serve directory
    #   - Serve individual file
    #   - Directory listing
    #
    # Choose an `unique name` for each `directory` or `individual` file
    # static route definition. It is called `route name`.
    #
    # Doc: https://docs.aahframework.org/routes-config.html#section-static
    #------------------------------------------------------------------------------
    static {
      public_assets {
        path = "/@admin/assets"
        dir = "static"
      }
      favicon {
        path = "/favicon.ico"
        file = "img/thumbai-favicon.ico"
      }
      robots_txt {
        path = "/robots.txt"
        file = "robots.txt"
      }
    }
    

    # -----------------------------------------------------------------------------
    # Routes Configuration
    #
    # Doc: https://docs.aahframework.org/routes-config.html#routes-configuration
    # -----------------------------------------------------------------------------
    routes {
      gomod {
        path = "/@repo/*modPath"
        controller = "GoModController"
        action = "Handle"
        auth = "anonymous"
      }

      admin {
        path = "/@admin"
        controller = "admin/DashboardController"
        action = "ToAdminDashboard"
        anti_csrf_check = true
        auth = "form_auth"
        routes {
          login {
            path = "/login"
            controller = "admin/UserController"
            action = "Login"
            auth = "anonymous"
          }
          logout {
            path = "/logout"
            method = "POST"
            controller = "admin/UserController"
            action = "Logout"
          }
          dashboard {
            path = "/dashboard"
          }
          vanity_admin {
            path = "/vanities"
            controller = "admin/VanityController"
            action = "List"
            routes {
              vanity_show {
                path = "/:hostName"
              }
            }
          }
          redirect_admin {
            path = "/redirects"
            controller = "admin/RedirectController"
            action = "List"
            routes {
              redirect_show {
                path = "/:hostName"
              }
            }
          }
          proxy_admin {
            path = "/proxies"
            controller = "admin/ProxyController"
            action = "List"
            routes {
              proxy_show {
                path = "/:hostName"
              }
            }
          }
        }        
      }

      # Definition demonstrates part of aah routes configuration capabilities
      api_v1 {
        path = "/api/v1"
        auth = "anonymous"
        anti_csrf_check = false

        routes {
          all_values {
            path = "/values"
            controller = "api/v1/ValueController"
            action = "List"

            routes {
              value_create {        # /api/v1/values
                method = "POST"
              }
              value_get {           # /api/v1/values/:key
                path = "/:key"

                routes {
                  value_update {    # /api/v1/values/:key
                    method = "PUT"
                  }
                  value_delete {    # /api/v1/values/:key
                    method = "DELETE"
                  }
                }
              } # end - value_get
            }
          } # end - all_values
        }
      } # end - api_v1 

      # WebSocket routes definitions
      # Sample implementation handles Text and JSON mode
      ws_sample {
        path = "/ws/:Mode"
        method = "WS"
        websocket = "SampleWebSocket"        
        action = "Handle"
      }

    } # end - routes

  } # end - localhost

} # end - domains
